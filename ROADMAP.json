{
    "phase": "Phase 1.7: Automated Remediation & Resilient Workflow",
    "phase_goal": "Enhance workflow autonomy with self-correction and dependency awareness, improving resilience to validation failures and LLM errors.",
    "success_metrics": [
        "Workflow driver successfully loads and respects task dependencies defined in ROADMAP.json.",
        "Driver correctly implements dependency-aware task selection.",
        "Driver attempts automated remediation for Code Style violations (e.g., missing docstrings, formatting) by re-prompting Coder LLM.",
        "Driver attempts automated remediation for Ethical (TransparencyScore) violations by re-prompting Coder LLM.",
        "Driver attempts automated remediation for Test failures by re-prompting Coder LLM (or invoking Debug Agent if available).",
        "LLM Orchestrator handles large contexts and token allocation failures more gracefully, reducing 'Insufficient tokens'/'No ethical allocation' errors.",
        "Phase 1.7 tests achieve >= 90% code coverage for new logic."
    ],
    "tasks": [
        {
            "task_id": "task_1_7_1",
            "priority": "Critical",
            "task_name": "Add Dependency Tracking to Roadmap & Loader",
            "description": "Modify ROADMAP.json schema validation and WorkflowDriver.load_roadmap to support an optional 'depends_on' field (list of task_ids). Update schema validation to enforce format.",
            "status": "Not Started",
            "target_file": "src/core/automation/workflow_driver.py",
            "depends_on": []
        },
        {
            "task_id": "task_1_7_2",
            "priority": "Critical",
            "task_name": "Implement Dependency-Aware Task Selection",
            "description": "Modify WorkflowDriver.select_next_task to only choose 'Not Started' tasks whose 'depends_on' tasks are all marked as 'Completed' in the current roadmap state.",
            "status": "Not Started",
            "target_file": "src/core/automation/workflow_driver.py",
            "depends_on": ["task_1_7_1"]
        },
        {
            "task_id": "task_1_7_3",
            "priority": "High",
            "task_name": "Implement Automated Code/Ethical Remediation",
            "description": "Add logic to WorkflowDriver's post-validation step to analyze Grade Report. If Code Style or Ethical (TransparencyScore) violations are found, generate a new plan step (or sub-task) to re-prompt Coder LLM with specific instructions to fix the identified issues, then re-run validation for the modified file.",
            "status": "Not Started",
            "target_file": "src/core/automation/workflow_driver.py",
            "depends_on": ["task_1_7_2"]
        },
        {
            "task_id": "task_1_7_4",
            "priority": "High",
            "task_name": "Implement Automated Test Failure Remediation",
            "description": "Add logic to WorkflowDriver's post-validation step. If tests fail, capture test output (stderr, tracebacks) and generate a new plan step (or sub-task) to re-prompt Coder LLM (or invoke Debug Agent if task_2_2_6 is completed) with test failure details to generate a fix, then re-run tests.",
            "status": "Not Started",
            "target_file": "src/core/automation/workflow_driver.py",
            "depends_on": ["task_1_7_2", "task_1_7_3"]
        },
         {
            "task_id": "task_1_7_5",
            "priority": "High",
            "task_name": "Enhance LLM Orchestrator Context/Allocation Robustness",
            "description": "Investigate and improve handling of large contexts and token allocation failures in EnhancedLLMOrchestrator to reduce 'Insufficient tokens'/'No ethical allocation' errors. Refine chunking, summarization, and allocation fallback strategies.",
            "status": "Not Started",
            "target_file": "src/core/llm_orchestration.py",
            "depends_on": ["task_1_7_2"]
        },
         {
            "task_id": "task_1_7_6",
            "priority": "High",
            "task_name": "Add Comprehensive Tests for Phase 1.7 Workflow",
            "description": "Write comprehensive unit/integration tests covering the new dependency scheduling, automated remediation loops, and Orchestrator robustness features implemented in Phase 1.7.",
            "status": "Not Started",
            "target_file": "tests/test_phase1_7_workflow.py",
            "depends_on": ["task_1_7_1", "task_1_7_2", "task_1_7_3", "task_1_7_4", "task_1_7_5"]
        }
    ],
    "next_phase_actions": [
         "Set `status`: `Completed` on all Phase 1.7 tasks.",
         "Update the `phase`, `phase_goal`, and `current_focus` fields to 'Phase 2 Iteration 2: Enhanced Agents & Knowledge Graph'.",
         "Add the Phase 2 Iteration 2 tasks (task_2_2_1 through task_2_2_8) back to the 'tasks' list."
    ],
    "current_focus": "üéØ CURRENT FOCUS: Phase 1.7 - Automated Remediation & Resilient Workflow üõ†Ô∏è"
}