# scripts/generate_roadmap_md.py
import json

def generate_roadmap_md(json_path="ROADMAP.json", md_path="ROADMAP.md"):
    try:
        with open(json_path, 'r') as f:
            data = json.load(f)

        # Determine if 'data' is a list or a dict
        if isinstance(data, list):
            tasks = data  # It's a list of tasks
        elif isinstance(data, dict):
            tasks = data.get("tasks", [])  # It's a dict with a "tasks" key
        else:
            print(f"Error: Unexpected format in {json_path}.  Expected list or dict with 'tasks' key.")
            return

        with open(md_path, 'w') as md_file:
            # Add the auto-generation warning at the beginning
            md_file.write("# Development Roadmap\n\n")
            md_file.write("***DO NOT EDIT THIS FILE DIRECTLY.*** It is automatically generated from `ROADMAP.json` by the CI/CD pipeline. All changes must be made in `ROADMAP.json`.\n\n")
            md_file.write("**NOTE: Rows showing `MISSING_ID`, `UNKNOWN`, or `NO_NAME` indicate problems with the `ROADMAP.json` file and require attention.**\n\n")

            for task in tasks:
                task_id = task.get('task_id', 'MISSING_ID')
                priority = task.get('priority', 'UNKNOWN')
                task_name = task.get('task_name', 'NO_NAME')
                status = task.get('status', 'NOT_SPECIFIED')

                md_file.write(f"*   **Task ID**: {task_id}\n")
                md_file.write(f"    *   **Priority**: {priority}\n")
                md_file.write(f"    *   **Task Name**: {task_name}\n")
                md_file.write(f"    *   **Status**: {status}\n\n")
        print(f"Successfully generated {md_path} from {json_path}")

    except FileNotFoundError:
        print(f"Error: {json_path} not found.")
    except json.JSONDecodeError as e:
        print(f"Error decoding JSON: {e}")
    except Exception as e:
        print(f"An error occurred: {e}")

if __name__ == "__main__":
    generate_roadmap_md()