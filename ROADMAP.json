{
    "phase": "Phase 2 Iteration 2: Enhanced Agents & Knowledge Graph",
    "phase_goal": "Significantly enhance core AI agents (Test Generation, Code Review) with deeper code understanding and integrate them with an expanded Knowledge Graph for improved context management and generation quality.",
    "success_metrics": [
        "KG schema supports storing AST, control flow, and data flow information.",
        "KG utility methods can store and retrieve AST, control flow, and data flow data.",
        "KG query methods effectively retrieve relevant code context for agents.",
        "Enhanced TestGenerationAgent uses KG context to generate basic, meaningful unit tests.",
        "Enhanced CodeReviewAgent uses KG context to perform basic semantic analysis.",
        "Basic AI-driven debugging/refactoring agent placeholder is functional.",
        "WorkflowDriver successfully orchestrates enhanced agents using KG context.",
        "Comprehensive tests for Phase 2 Iteration 2 features achieve >= 90% code coverage."
    ],
    "tasks": [
        {
            "task_id": "task_2_2_1",
            "priority": "Critical",
            "task_name": "Define KG Schema for Code Semantics",
            "description": "Define and document the Knowledge Graph schema to store richer code semantics including AST nodes, control flow, and data flow relationships.",
            "status": "Not Started",
            "target_file": "src/core/knowledge_graph.py"
        },
        {
            "task_id": "task_2_2_2",
            "priority": "Critical",
            "task_name": "Implement KG Utility Methods for Storing Code Semantics",
            "description": "Implement methods in the Knowledge Graph module to parse code and store AST, control flow, and data flow information according to the defined schema (task_2_2_1).",
            "status": "Not Started",
            "target_file": "src/core/knowledge_graph.py"
        },
        {
            "task_id": "task_2_2_3",
            "priority": "High",
            "task_name": "Implement KG Query Methods for Agent Context",
            "description": "Add specific query methods to the Knowledge Graph interface that agents can use to retrieve relevant code context, such as finding related functions, class definitions, or dependencies for a given code snippet (leveraging schema and data from task_2_2_1, task_2_2_2).",
            "status": "Not Started",
            "target_file": "src/core/knowledge_graph.py"
        },
        {
            "task_id": "task_2_2_4",
            "priority": "High",
            "task_name": "Enhance TestGenerationAgent using KG Context",
            "description": "Modify TestGenerationAgent to use the KG query methods (task_2_2_3) to understand code structure and purpose, generating basic, meaningful unit tests instead of placeholders.",
            "status": "Not Started",
            "target_file": "src/core/agents/test_generator.py"
        },
        {
            "task_id": "task_2_2_5",
            "priority": "High",
            "task_name": "Enhance CodeReviewAgent using KG Context",
            "description": "Add capabilities to CodeReviewAgent to perform basic semantic code analysis (e.g., simple dead code detection, potential logic errors) by querying the KG (task_2_2_3), beyond current static analysis.",
            "status": "Not Started",
            "target_file": "src/core/agents/code_review_agent.py"
        },
         {
            "task_id": "task_2_2_6",
            "priority": "Medium",
            "task_name": "Implement Basic AI-Driven Debug/Refactor Agent Placeholder",
            "description": "Create a new agent (e.g., DebugRefactorAgent) with placeholder logic for AI-driven debugging suggestions or simple refactoring tasks, laying the groundwork for future enhancements.",
            "status": "Not Started",
            "target_file": "src/core/agents/debug_refactor_agent.py"
        },
        {
            "task_id": "task_2_2_7",
            "priority": "Critical",
            "task_name": "Integrate Enhanced Agents with WorkflowDriver & KG",
            "description": "Modify the WorkflowDriver to orchestrate the enhanced TestGenerationAgent (task_2_2_4), CodeReviewAgent (task_2_2_5), and Debug/Refactor Agent (task_2_2_6), enabling them to query and utilize the expanded Knowledge Graph (task_2_2_3) for context during their execution.",
            "status": "Not Started",
            "target_file": "src/core/automation/workflow_driver.py"
        },
        {
            "task_id": "task_2_2_8",
            "priority": "High",
            "task_name": "Add Comprehensive Tests for Phase 2 Iteration 2 Features",
            "description": "Write comprehensive unit and integration tests covering the new KG schema/methods (task_2_2_1, 2.2.2, 2.2.3), enhanced agents (task_2_2_4, 2.2.5, 2.2.6), and their integration with the WorkflowDriver (task_2_2_7). Aim for >= 90% code coverage for new logic.",
            "status": "Not Started",
            "target_file": "tests/test_phase2_iteration2.py"
        }
    ],
    "next_phase_actions": [
         "Set `status`: `Completed` on all Phase 2 Iteration 2 tasks",
         "Remove all Phase 2 Iteration 2 tasks from the json config",
         "Set ðŸŽ¯ CURRENT FOCUS to `Phase 2 Iteration 3: Ethical Governance & API Expansion`",
         "Add tasks from Iteration 3 (Ethical Governance & API Expansion)"
    ],
    "current_focus": "ðŸŽ¯ CURRENT FOCUS: Phase 2 Iteration 2 - Enhanced Agents & Knowledge Graph ðŸ§ "
}